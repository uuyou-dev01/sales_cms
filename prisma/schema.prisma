generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Item {
  itemId              String             @id
  itemName            String
  itemMfgDate         String
  itemNumber          String
  itemType            String
  itemBrand           String
  itemCondition       String
  itemRemarks         String
  itemColor           String
  itemSize            String
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  deleted             Boolean            @default(false)
  photos              String[]
  position            String?
  warehousePositionId String?
  accessories         String?
  warehousePosition   WarehousePosition? @relation(fields: [warehousePositionId], references: [id])
  transactions        Transaction[]
}

model Transaction {
  id                          String    @id @default(cuid())
  itemId                      String
  shipping                    String?
  domesticShipping            String?
  internationalShipping       String?
  domesticTrackingNumber      String?
  internationalTrackingNumber String?
  orderStatus                 String    @default("在途（国内）")
  purchaseDate                DateTime
  soldDate                    DateTime?
  launchDate                  DateTime?
  purchasePlatform            String
  soldPlatform                String?
  listingPlatforms            String[]
  otherFees                   Json?
  purchasePrice               String
  purchasePriceCurrency       String
  purchasePriceExchangeRate   String
  soldPrice                   String?
  soldPriceCurrency           String?
  soldPriceExchangeRate       String?
  itemGrossProfit             String?
  itemNetProfit               String?
  isReturn                    Boolean?
  storageDuration             String?
  createdAt                   DateTime  @default(now())
  updatedAt                   DateTime  @updatedAt
  item                        Item      @relation(fields: [itemId], references: [itemId])
}

model productRefPrice {
  itemId               String   @id
  itemName             String
  itemMfgDate          String
  itemNumber           String
  itemType             String
  itemBrand            String
  itemCondition        String
  itemRemarks          String
  itemColor            String
  itemStatus           String
  itemSize             String
  refPrice             String
  refPriceCurrency     String
  refPriceExchangeRate String
  refPriceCNY          String
  refDate              DateTime
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}

model Warehouse {
  id          String              @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  positions   WarehousePosition[]
}

model WarehousePosition {
  id          String    @id @default(cuid())
  name        String
  capacity    Int
  used        Int       @default(0)
  warehouseId String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  items       Item[]
  warehouse   Warehouse @relation(fields: [warehouseId], references: [id], onDelete: Cascade)
}
